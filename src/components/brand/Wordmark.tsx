import classNames from "classnames"
import React, { HTMLAttributes } from "react"

export interface IWordmark extends HTMLAttributes<HTMLOrSVGElement> {
  height?: number
  fill?: string
  width?: number
}

export const Wordmark = ({
  className,
  fill = "currentColor",
  height = 20,
  title = "Paquette Wordmark",
  width,
  ...props
}: IWordmark) => {
  const wordmarkClasses = classNames([className])
  const dimensions = [86, 20]
  const [defaultWidth, defaultHeight] = dimensions
  const ratio = defaultWidth / defaultHeight

  /**
   * If no height or width parameter is set:
   *  - we can infer what it should be with the default ratio
   *  - we can conditionally include a viewbox to keep the output clean
   */
  width = width || height * ratio
  height = height || width / ratio

  return (
    <svg
      width={width}
      height={height}
      viewBox={height !== 20 || width !== 86 ? "0 0 86 20" : undefined}
      className={wordmarkClasses}
      {...props}
    >
      {title.length && <title>{title}</title>}
      <path
        fill={fill}
        fillRule="evenodd"
        d="M5.92414,0 C9.14076,0 11.2466,1.83145 11.2466,4.60151 C11.2466,7.53183 9.11761,9.27171 5.90099,9.27171 L3.3052,9.27171 C3.02623,9.27171 2.80008,9.49922 2.80008,9.77839 L2.80008,13.9235 L0,15.4164 L0,0 L5.92414,0 Z M8.35395,4.62441 C8.35395,3.13636 7.28946,2.42667 5.76214,2.42667 L3.30591,2.42667 C3.02654,2.42667 2.80008,2.65302 2.80008,2.93182 L2.80008,6.36279 C2.80008,6.64177 3.02759,6.86793 3.30591,6.86793 L5.76214,6.86793 C7.28946,6.86793 8.35395,6.15825 8.35395,4.62441 Z M21.2782,14.4828 L21.2782,8.19212 C21.2782,5.7147 19.6752,4.03879 16.5905,4.03879 C13.9431,4.03879 12.4615,4.96175 12.4615,4.96175 L13.3845,7.09914 C13.3845,7.09914 14.5746,6.37048 16.0562,6.37048 C17.5863,6.37048 18.485,6.83196 18.485,8.09496 L18.485,8.41071 C17.975,8.26498 17.2706,8.14354 16.3962,8.14354 C13.3116,8.14354 11.7571,9.43083 11.7571,11.4953 C11.7571,13.3413 13.1416,14.7257 15.4975,14.7257 C17.1492,14.7257 18.2178,14.0942 18.7765,13.1955 L18.8979,13.1955 L19.2865,14.4828 L21.2782,14.4828 Z M16.2498,12.734 C17.4642,12.734 18.4358,11.9811 18.4843,10.8881 L18.4843,10.0623 C18.2172,9.91659 17.6828,9.74657 16.7356,9.74657 C15.2783,9.74657 14.501,10.3295 14.501,11.301 C14.501,12.1511 15.1811,12.734 16.2498,12.734 Z M33.8082,18.2718 L33.8082,4.28168 L31.9137,4.28168 L31.4522,5.83614 L31.355,5.83614 C31.355,5.83614 30.5535,4.03879 27.9789,4.03879 C25.2829,4.03879 23.2184,6.10331 23.2184,9.35796 C23.2184,12.5397 25.2343,14.7257 27.8818,14.7257 C30.1406,14.7257 30.7721,13.3413 30.7721,13.3413 L30.8935,13.3413 L30.8935,19.9585 L33.8082,18.2718 Z M31.0628,9.40654 C31.0628,7.58491 30.0427,6.44335 28.5854,6.44335 C27.1767,6.44335 26.1808,7.68206 26.1808,9.40654 C26.1808,11.131 27.1767,12.3212 28.5854,12.3212 C30.0427,12.3212 31.0628,11.2039 31.0628,9.40654 Z M41.2128,12.2726 C42.6216,12.2726 43.3259,11.131 43.3259,10.1838 L43.3259,5.63104 L46.2405,4.28168 L46.2405,14.4828 L44.2975,14.4828 L43.7874,13.0984 L43.666,13.0984 C43.1802,13.8027 42.3058,14.7257 40.5085,14.7257 C37.9096,14.7257 36.3309,12.9526 36.3309,10.2081 L36.3309,5.63104 L39.2455,4.28168 L39.2455,9.96517 C39.2455,11.2767 39.9013,12.2726 41.2128,12.2726 Z M56.5844,11.6168 L57.6045,13.5356 C57.6045,13.5356 56.3658,14.7743 53.767,14.7743 C50.3423,14.7743 48.3021,12.4669 48.3021,9.38225 C48.3021,6.32191 50.3423,4.03879 53.3541,4.03879 C56.3415,4.03879 58.1146,6.05473 58.1146,9.11508 C58.1146,9.40654 58.0903,9.9166 58.0903,9.9166 L51.1195,9.9166 C51.2895,11.6654 52.334,12.4669 53.9613,12.4669 C55.5643,12.4669 56.5844,11.6168 56.5844,11.6168 Z M51.1917,8.19211 C51.4346,6.85625 52.2118,6.22475 53.2805,6.22475 C54.4706,6.22475 55.1507,6.9534 55.2721,8.19211 L51.1917,8.19211 Z M59.0834,4.28168 L59.0834,6.5405 L60.8565,6.5405 L60.8565,11.2039 C60.8565,13.2441 61.8037,14.7257 64.1597,14.7257 C65.3255,14.7257 66.3457,14.2156 66.7829,13.8999 L65.957,11.884 C65.957,11.884 65.447,12.224 64.8641,12.224 C64.1111,12.224 63.7711,11.8111 63.7711,11.1067 L63.7711,6.5405 L66.2728,6.5405 L66.2728,4.28168 L63.7711,4.28168 L63.7711,1.17276 L60.8565,2.85946 L60.8565,4.28168 L59.0834,4.28168 Z M67.388,6.5405 L67.388,4.28168 L69.161,4.28168 L69.161,2.85946 L72.0757,1.17276 L72.0757,4.28168 L74.5774,4.28168 L74.5774,6.5405 L72.0757,6.5405 L72.0757,11.1067 C72.0757,11.8111 72.4157,12.224 73.1686,12.224 C73.7516,12.224 74.2616,11.884 74.2616,11.884 L75.0874,13.8999 C74.6502,14.2156 73.6301,14.7257 72.4643,14.7257 C70.1083,14.7257 69.161,13.2441 69.161,11.2039 L69.161,6.5405 L67.388,6.5405 Z M84.2906,11.6168 L85.3113,13.5356 C85.3113,13.5356 84.072,14.7743 81.4731,14.7743 C78.0485,14.7743 76.0082,12.4669 76.0082,9.38225 C76.0082,6.32191 78.0485,4.03879 81.0602,4.03879 C84.0477,4.03879 85.8208,6.05473 85.8208,9.11508 C85.8208,9.40654 85.7965,9.9166 85.7965,9.9166 L78.8257,9.9166 C78.9957,11.6654 80.0401,12.4669 81.6674,12.4669 C83.2705,12.4669 84.2906,11.6168 84.2906,11.6168 Z M78.8978,8.19211 C79.1407,6.85625 79.9179,6.22475 80.9866,6.22475 C82.1768,6.22475 82.8568,6.9534 82.9783,8.19211 L78.8978,8.19211 Z"
      />
    </svg>
  )
}
